// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: tags.sql

package sqlc

import (
	"context"
)

const createTag = `-- name: CreateTag :one
INSERT INTO "Tags" (
  tag_name
) VALUES (
  $1
)
RETURNING id, tag_name
`

func (q *Queries) CreateTag(ctx context.Context, tagName string) (Tag, error) {
	row := q.db.QueryRow(ctx, createTag, tagName)
	var i Tag
	err := row.Scan(&i.ID, &i.TagName)
	return i, err
}

const getAllTags = `-- name: GetAllTags :many
select id, tag_name from "Tags"
`

func (q *Queries) GetAllTags(ctx context.Context) ([]Tag, error) {
	rows, err := q.db.Query(ctx, getAllTags)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Tag{}
	for rows.Next() {
		var i Tag
		if err := rows.Scan(&i.ID, &i.TagName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
